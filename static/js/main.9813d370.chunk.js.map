{"version":3,"sources":["shared/util/utility.js","shared/Data/2021_week19_climate_data.csv","shared/uiElements/DataSelectors.js","shared/uiElements/Backdrop.js","shared/uiElements/Modal.js","shared/uiElements/DateSelector.js","Chart/StackedBarChart.js","shared/Data/SelectorData.js","PDF_Generator/Components/logo.png","PDF_Generator/Components/ReportHeader.js","PDF_Generator/Components/ReportBody.js","PDF_Generator/Generate_PDF.js","shared/uiElements/LoadingSpinner.js","shared/hooks/useGraphData.js","shared/uiElements/Card.js","App.js","shared/hooks/useData.js","reportWebVitals.js","index.js"],"names":["VPD_Calculator","Date","getTime","temp","humidity","result","Math","E","SVP","round","normalize_data","x","mini","maxi","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","elementPadding","padding","DataSelect","dataSetSelector","sensorChangeHandler","classes","React","useState","value","currentSensor","setcurrentSensor","useEffect","className","FormControl","variant","InputLabel","id","Select","labelId","onChange","event","target","label","map","d","MenuItem","key","Backdrop","props","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","root","display","flexDirection","alignItems","buttonHover","cursor","backgroundColor","dateReducer","state","action","type","tempDate","days","range","isCustomDate","startDate","sub","endDate","DateSelectorButtonGroup","dateSelector","dateChangeHandler","useReducer","addDays","dispatch","handleSelect","useCallback","ranges","selection","handleClose","handleChange","find","innerText","toLowerCase","onCancle","Button","showSelectionPreview","moveRangeOnFirstSelection","direction","ButtonGroup","color","innerHeight","innerWidth","StackedBarChart","graphData","outputData","selectedSensors","dateRange","sensors","colorsArr","colors","forEach","senson","i","svgRef","useRef","svg","select","current","layers","stack","keys","order","stackOrderAscending","stackGenerator","extent","max","layer","sequence","xScale","scaleBand","domain","yScale","scaleLinear","selectAll","data","join","attr","bandwidth","on","tooltip","xPosition","pointer","node","yPosition","text","append","height","xAxis","axisBottom","scale","tickFormat","timeFormat","tickValues","filter","call","yAxis","axisLeft","legend","enter","ref","width","transform","position","logoStyle","maxWidth","ReportHeader","scimeticLogo","Typography","component","src","logo","alt","AppBar","Toolbar","ReportBody","toDateString","GeneratePDF","input","domtoimage","toPng","then","dataUrl","pdf","jsPDF","addImage","save","catch","error","console","LoadingSpinner","asOverlay","graphDataReducer","output","Card","App","setData","csv","csvData","Temperature_2","Temperature_137522","Humitidy_137522","Humitidy_2","CarbonDioxide_137522","CarbonDioxide_2","Vpd_2","Vpd_137522","avg_temp","avg_co2","avg_humitidy","avg_vpd","temp_min","min","temp_max","co2_min","co2_max","humitidy_min","humitidy_max","vpd_min","vpd_max","temperature","co2","humitidy","vpd","useData","setDisplay","inputData","getOutput","JSON","parse","stringify","moment","isBetween","dRow","sensor","push","setGraphData","useGraphData","Grid","container","item","md","marginLeft","undefined","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.9813d370.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst currentTimeStamp= new Date().getTime();\r\nconst daysOffSet = 40;\r\nconst dayMilliseconds = daysOffSet*24*60*60*1000;\r\n\r\nexport const dateIsBetween= (currentObjectDate, givenDate)=>{\r\n    const {startDate, endDate}= givenDate\r\n\r\n    if(typeof startDate.getMonth === 'function' ){\r\n        return moment(currentObjectDate).isBetween(startDate, endDate)\r\n    }else{\r\n        const sDate =  new Date(currentTimeStamp - (startDate * dayMilliseconds))\r\n        return moment(currentObjectDate).isBetween(sDate, endDate)\r\n    }\r\n    \r\n   \r\n}\r\n\r\nconst SVP=(temp)=>{\r\n    //SVP = 610.78 x e^(T / (T +238.3) x 17.2694))\r\n    return 610.78 * Math.E**( temp / (temp +238.3) * 17.2694)\r\n}\r\n\r\nexport const VPD_Calculator=(temp, humidity)=>{\r\n    // SVP x (1 – RH/100) = VPD\r\n       const result = SVP(temp) *(1 - (humidity)/100) /1000\r\n       return Math.round(result * 100) /100\r\n\r\n}\r\n\r\nexport const normalize_data=(x, mini, maxi)=>{\r\n    //zi = (xi – min(x)) / (max(x) – min(x)) * 100\r\n\r\n    return (x - mini) / ((maxi - mini) )\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/2021_week19_climate_data.513ad7be.csv\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(6),\r\n    },\r\n    elementPadding: {\r\n        padding: theme.spacing(6),\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function DataSelect({ dataSetSelector, sensorChangeHandler }) {\r\n    const classes = useStyles();\r\n    const [currentSensor, setcurrentSensor] = React.useState(dataSetSelector[0].value);\r\n\r\n    const handleChange = (event) => {\r\n        setcurrentSensor(event.target.value);\r\n        \r\n    };\r\n    React.useEffect(()=>{\r\n        sensorChangeHandler(currentSensor)\r\n    },[sensorChangeHandler,currentSensor])\r\n\r\n    return (\r\n        <div className={classes.selectEmpty}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"Sensor Selectors\">Sensors</InputLabel>\r\n                <Select\r\n                    labelId=\"Sensor Selectors\"\r\n                    value={currentSensor}\r\n                    onChange={handleChange}\r\n                    label=\"Sensor\"\r\n                >\r\n                    {\r\n                        dataSetSelector.map(d => (\r\n                            <MenuItem value={d.value} key={d.key}>{d.key}</MenuItem>\r\n                        ))\r\n                    }\r\n\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useReducer, useCallback,useEffect } from 'react';\r\nimport { addDays, sub } from 'date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './DatePicker_Model.css';\r\nimport Modal from './Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    buttonHover: {\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#86af49\"\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: \"#86af49\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst dateReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"DECISION\":\r\n\r\n            const tempDate = action.tempDate;\r\n            if (tempDate.days === 0) {\r\n\r\n                return ({\r\n                    range: { ...state.range },\r\n                    isCustomDate: true\r\n                })\r\n            } else {\r\n\r\n                let result = { startDate: sub(new Date(), { [tempDate.type]: [tempDate.days] }), endDate: new Date(), key: 'selection' };\r\n                return ({\r\n                    range: result,\r\n                    isCustomDate: state.isCustomDate\r\n\r\n                });\r\n            }\r\n        case \"CLOSE\":\r\n            return ({\r\n                range: { ...state.range },\r\n                isCustomDate: action.isCustomDate\r\n            });\r\n        case \"SELECT_CUSTOM_DATE\":\r\n\r\n            return ({\r\n                range: action.range,\r\n\r\n                isCustomDate:state.isCustomDate \r\n\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport function DateSelectorButtonGroup({ dateSelector, display, dateChangeHandler }) {\r\n    const classes = useStyles();\r\n\r\n    const [state, dispatch] = useReducer(dateReducer, {\r\n        range: {\r\n            startDate: new Date(),\r\n            endDate: addDays(new Date(), 2),\r\n            key: 'selection'\r\n        },\r\n        isCustomDate: false,\r\n    })\r\n\r\n    const handleSelect = useCallback((ranges) => {\r\n        dispatch({\r\n            type: \"SELECT_CUSTOM_DATE\",\r\n            range: ranges.selection\r\n        })\r\n    }, [])\r\n    const handleClose = () => {\r\n        dispatch({\r\n            type: \"CLOSE\",\r\n            isCustomDate: false\r\n        })\r\n    }\r\n    const handleChange = (event) => {\r\n\r\n        dispatch({\r\n            type: \"DECISION\",\r\n            tempDate: dateSelector.find(d => (d.key === (event.target.innerText).toLowerCase()))\r\n        })\r\n\r\n    };\r\n\r\n    const {range}=state\r\n    useEffect(()=>{\r\n        dateChangeHandler(range)\r\n    },[dateChangeHandler, range])\r\n\r\n    if (state.isCustomDate) {\r\n        return (\r\n            <Modal\r\n                show={state.isCustomDate}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                onCancle={handleClose}\r\n                footer={<Button onClick={handleClose}>CLOSE</Button>}\r\n            >\r\n                <DateRangePicker\r\n                    ranges={[state.range]}\r\n                    onChange={handleSelect}\r\n                    showSelectionPreview={true}\r\n                    moveRangeOnFirstSelection={false}\r\n                    direction=\"horizontal\"\r\n                />\r\n            </Modal>);\r\n    }\r\n\r\n    if (!display) {\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                    {dateSelector.map(d => (\r\n                        <Button className={classes.buttonHover} onClick={handleChange} key={d.key}>{d.key}</Button>\r\n                    ))}\r\n\r\n                </ButtonGroup>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n    return <React.Fragment></React.Fragment>\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleBand,\r\n  axisBottom,\r\n  stack,\r\n  max,\r\n  scaleLinear,\r\n  axisLeft,\r\n  stackOrderAscending,\r\n  timeFormat,\r\n  pointer,\r\n} from \"d3\";\r\n\r\n\r\n/**\r\n * Component that renders a StackedBarChart\r\n */\r\n\r\nconst height = 600;\r\nconst width = 760;\r\nconst margin = {\r\n  top: 100,\r\n  right: 10,\r\n  left: 50,\r\n  bottom: 20,\r\n};\r\nconst innerHeight = height - margin.top - margin.bottom;\r\nconst innerWidth = width - margin.left - margin.right;\r\n\r\nfunction StackedBarChart({ graphData }) {\r\n  const {outputData, selectedSensors, dateRange} = graphData;\r\n\r\n  const sensors = selectedSensors\r\n\r\n\r\n  const colorsArr = ['#d53e4f', \"#3288bd\", \"#66c2a5\", \"#f46d43\"]\r\n  const colors = {};\r\n  sensors.forEach((senson, i) => {\r\n\r\n    colors[senson] = colorsArr[i]\r\n  });\r\n  const svgRef = useRef();\r\n\r\n\r\n  // will be called initially and on every data change\r\n  useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n\r\n\r\n\r\n    //Reshaping data accoring to need\r\n    \r\n\r\n\r\n    // stacks / layers\r\n    const stackGenerator = stack()\r\n      .keys(sensors)\r\n      .order(stackOrderAscending);\r\n    const layers = stackGenerator(outputData);\r\n\r\n    const extent = [\r\n      0,\r\n      max(layers, layer => max(layer, sequence => sequence[1]))\r\n    ];\r\n\r\n\r\n    // scales\r\n    const xScale = scaleBand()\r\n      .domain(outputData.map(d => {\r\n        return new Date(d.Date).getTime()\r\n      }))\r\n      .range([0, innerWidth])\r\n\r\n\r\n    const yScale = scaleLinear()\r\n      .domain(extent)\r\n      .range([innerHeight, 0]);\r\n\r\n\r\n    // rendering\r\n    svg\r\n      .selectAll(\".layer\")\r\n      .data(layers)\r\n      .join(\"g\")\r\n      .attr(\"class\", \"layer\")\r\n      .attr(\"fill\", layer => colors[layer.key])\r\n      .selectAll(\"rect\")\r\n      .data(layer => layer)\r\n      .join(\"rect\")\r\n      .attr(\"x\", sequence => xScale(new Date(sequence.data.Date).getTime()))\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .attr(\"y\", sequence => yScale(sequence[1]))\r\n      .attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1]))\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\r\n      .on(\"mouseover\", function () { tooltip.style(\"display\", null); })\r\n      .on(\"mouseout\", function () { tooltip.style(\"display\", \"none\"); })\r\n      .on(\"mousemove\", function (d) {\r\n        var xPosition = pointer(d, svg.node)[0];\r\n        var yPosition = pointer(d, svg.node)[1];\r\n        tooltip.attr(\"transform\", `translate( ${xPosition - 10}, ${yPosition - 10})`);\r\n        tooltip.select(\"text\").text(layer => layer);\r\n      });\r\n    var tooltip = svg.append(\"g\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"display\", \"none\");\r\n\r\n    tooltip.append(\"text\")\r\n      .attr(\"dy\", \"1.2em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"font-size\", \"15px\")\r\n      .attr(\"font-weight\", \"bold\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"x label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"x\", innerWidth / 2)\r\n      .attr(\"y\", height + 20)\r\n      .text(\"Date Month\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"y label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"y\", (innerWidth / 2) - 350)\r\n      .attr(\"x\", (-innerHeight / 2) + 50)\r\n      .attr(\"dy\", \".75em\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .text(\"Sensor Data\");\r\n\r\n    // axes\r\n    const xAxis = axisBottom(xScale).scale(xScale)\r\n      .tickFormat(timeFormat(\"%d %b\"))\r\n      .tickValues(xScale.domain().filter(function (d, i) {\r\n        return !(i % 400)\r\n      }));\r\n\r\n    svg\r\n      .select(\".x-axis\")\r\n      .attr(\"transform\", `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select(\".y-axis\").call(yAxis);\r\n\r\n    var legend = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', 'translate(' + (innerWidth - 90) + ', 20)');\r\n    legend.selectAll('text')\r\n      .data(sensors)\r\n      .enter()\r\n      .append('text')\r\n      .text(function (d) {\r\n        return d;\r\n      })\r\n      .attr('x', 18)\r\n      .attr('y', function (d, i) {\r\n        return i * 18;\r\n      })\r\n      .attr('text-anchor', 'start')\r\n      .attr('alignment-baseline', 'hanging');\r\n    legend.selectAll('rect')\r\n      .data(sensors)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', 0)\r\n      .attr('y', function (d, i) {\r\n        return i * 18;\r\n      })\r\n      .attr('width', 12)\r\n      .attr('height', 12)\r\n      .attr('fill', function (d, i) {\r\n        return colors[d];\r\n      });\r\n\r\n\r\n\r\n\r\n  }, [outputData, sensors, colors, dateRange]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <svg ref={svgRef} width={width} height={height}>\r\n        <g\r\n          transform={`translate(${margin.left},${margin.top})`}\r\n        >\r\n          <g className=\"x-axis\"></g>\r\n          <g className=\"y-axis\" />\r\n        </g>\r\n\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default StackedBarChart;","export const dataSetSelector = [\r\n    { key: \"Temperature\", value: [\"Temperature_2\", \"Temperature_137522\"] },\r\n    { key: \"Co2 Levels\", value: [\"CarbonDioxide_2\", \"CarbonDioxide_137522\"] },\r\n    { key: \"Humidity\", value: [\"Humitidy_2\", \"Humitidy_137522\"] },\r\n    { key: \"VPD\", value: [\"Vpd_2\", \"Vpd_137522\"] },\r\n    { key: \"All\", value: [\"temperature\", \"co2\", \"humitidy\", \"vpd\"] }\r\n]\r\nexport const dateSelector = [\r\n    { key: \"12 hours\",  days: 12, type:'hours' },\r\n    { key: \"1 day\", days: 1, type:'days' },\r\n    { key: \"7 days\", days: 7 ,type:'days'},\r\n    { key: \"14 days\", days: 14,type:'days' },\r\n    { key: \"30 days\", days: 30,type:'days' },\r\n    { key: \"custome date\", days: 0 ,type:'custom'},\r\n]","export default __webpack_public_path__ + \"static/media/logo.872fc8ea.png\";","// import React from \"react\";\r\n\r\n// export const ReportHeader = ({display})=>{\r\n\r\n\r\n//     if (display) {\r\n//         return <div>displaying</div>;\r\n//       }\r\n//       return <React.Fragment></React.Fragment>\r\n\r\n// }\r\n\r\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport logo from \"./logo.png\"\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    position:\"inherit\"\r\n\r\n  },\r\n  logoStyle:{\r\n    maxWidth:\"170px\"\r\n  }\r\n}))\r\n\r\nexport default function ReportHeader({ display }) {\r\n  const { header, logoStyle } = useStyles();\r\n  const displayDesktop = () => {\r\n    return <Toolbar>{scimeticLogo}</Toolbar>;\r\n  };\r\n  const scimeticLogo = (\r\n    <Typography variant=\"h6\" component=\"h1\">\r\n      <img src={logo} alt=\"logo\" className={logoStyle} />\r\n    </Typography>\r\n  );\r\n\r\n\r\n  if (display) {\r\n    return (\r\n      <header >\r\n        <AppBar className={header}>{displayDesktop()}</AppBar>\r\n      </header>\r\n    );\r\n  }\r\n  return <React.Fragment></React.Fragment>\r\n\r\n\r\n}\r\n","import React from \"react\";\r\nimport \"./ReportBody.css\"\r\nexport const ReportBody = (props) => {\r\n\r\n\r\n    if (props.display) {\r\n        return <React.Fragment>\r\n            <div className=\"report-body\">\r\n                <div className='report-details'>\r\n                    <span >\r\n                        Report created by: <span className=\"report-creater\"> Talha </span>\r\n                    </span>\r\n                    <span>\r\n                        Report Date: Date\r\n                    </span>\r\n                </div>\r\n                <div className=\"main-text\">\r\n                    <span className=\"company-name\">Scimetic | Epic Solutions</span>\r\n                    <span className=\"greenhouse-name\">Test Greenhouse</span>\r\n                    <span>\r\n                        Genealogy: test Genealogy\r\n                    </span>\r\n                    <span>\r\n                        Date of Plating: {new Date().toDateString()}\r\n                    </span>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <span className=\"d3-chart\">\r\n                    {props.children}\r\n                </span>\r\n                <p>More text can be added</p>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n    return <React.Fragment> {props.children}</React.Fragment>\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport domtoimage from 'dom-to-image';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const GeneratePDF = (props) => {\r\n    const printDocument = () => {\r\n        const input = document.getElementById('divToPrint');\r\n\r\n        domtoimage.toPng(input)\r\n            .then(function (dataUrl) {\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(dataUrl, 'PNG', 0, 0);\r\n                pdf.save(\"download.pdf\");\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.error('oops, something went wrong!', error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    if (props.display) {\r\n        return <React.Fragment>\r\n\r\n            <Button variant=\"outlined\" color=\"primary\" aria-label=\"text primary button\" onClick={printDocument}>Print</Button>\r\n\r\n        </React.Fragment>;\r\n    }\r\n    return <React.Fragment></React.Fragment>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useEffect, useReducer, useCallback } from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst graphDataReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DATE_CHANGE\":\r\n\r\n            return ({\r\n                ...state,\r\n                dateRange: action.dateRange\r\n            });\r\n        case \"SENSOR_CHANGE\":\r\n\r\n            return ({\r\n                ...state,\r\n                selectedSensors: action.sensors\r\n            });\r\n\r\n        case \"SET_FORM_DATA\":\r\n\r\n            return ({\r\n                ...state,\r\n                data: action.data\r\n            });\r\n        case \"UPDATE_OUTPUT\":\r\n\r\n            return ({\r\n                ...state,\r\n                outputData : action.output\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const useGraphData = (inputData) => {\r\n    const [graphData, dispatch] = useReducer(graphDataReducer, {\r\n        data: inputData,\r\n        outputData: [],\r\n        selectedSensors: null,\r\n        dateRange: null\r\n    })\r\n\r\n    const getOutput = useCallback((data,selectedSensors, dateRange) => {\r\n        const outputData = []\r\n\r\n        const dataCopy = JSON.parse(JSON.stringify(data));\r\n        dataCopy.forEach(d => {\r\n            if ( moment(d.Date).isBetween(dateRange['startDate'], dateRange['endDate']) ) {\r\n                let dRow = {}  \r\n\r\n                selectedSensors.forEach(sensor => {\r\n                    dRow[\"Date\"] = d.Date;\r\n                    if (sensor in d) {\r\n                        dRow[sensor] = d[sensor]\r\n                    }\r\n                })\r\n                outputData.push(dRow);\r\n\r\n            }\r\n        })\r\n        dispatch({ type: \"UPDATE_OUTPUT\", output: outputData })\r\n\r\n    }, [])\r\n\r\n\r\n    const dateChangeHandler = useCallback((dateRange) => {\r\n        dispatch({ type: \"DATE_CHANGE\", dateRange: dateRange })\r\n    }, [])\r\n\r\n    const sensorChangeHandler = useCallback((sensors) => {\r\n        dispatch({ type: \"SENSOR_CHANGE\", sensors: sensors })\r\n    }, [])\r\n\r\n    const setGraphData = useCallback((data) => {\r\n        dispatch({ type: \"SET_FORM_DATA\", data: data })\r\n    }, [])\r\n\r\n    const { data, selectedSensors, dateRange } = graphData;\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            getOutput(data,selectedSensors, dateRange)\r\n        }\r\n\r\n    }, [data, selectedSensors, dateRange, getOutput])\r\n\r\n    return [graphData, dateChangeHandler, sensorChangeHandler, setGraphData]\r\n\r\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","\nimport React from 'react';\n\nimport { useData } from './shared/hooks/useData';\nimport DataSelect from \"./shared/uiElements/DataSelectors\"\nimport { DateSelectorButtonGroup } from \"./shared/uiElements/DateSelector\"\nimport StackedBarChart from \"./Chart/StackedBarChart\"\nimport { dataSetSelector, dateSelector } from \"./shared/Data/SelectorData\"\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ReportHeader from \"./PDF_Generator/Components/ReportHeader\"\nimport { ReportBody } from \"./PDF_Generator/Components/ReportBody\"\nimport { GeneratePDF } from \"./PDF_Generator/Generate_PDF\"\nimport LoadingSpinner from \"./shared/uiElements/LoadingSpinner\"\nimport { useGraphData } from './shared/hooks/useGraphData'\nimport Card from './shared/uiElements/Card'\nimport \"./App.css\"\n\n\n\n\nconst App = () => {\n  const data = useData();\n  const [display, setDisplay] = React.useState(false)\n  const [graphData, dateChangeHandler, sensorChangeHandler, setGraphData] = useGraphData(data);\n\n  const clickHandler = () => {\n\n    setDisplay(!display);\n\n  };\n\n  React.useEffect(() => {\n    if (data)\n      setGraphData(data)\n  }, [data, setGraphData])\n\n  if (!data) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  const { outputData } = graphData;\n  return (\n    <React.Fragment >\n\n      <Grid container  >\n        <Grid item md={1} style={{ marginLeft: \"10%\" }} ></Grid>\n        <div >\n          <Grid item md={9} style={{ maxWidth: \"100%\" }} id=\"divToPrint\" >\n            <ReportHeader display={display} />\n            <DateSelectorButtonGroup dateChangeHandler={dateChangeHandler} dateSelector={dateSelector} display={display} />\n            {outputData === undefined || outputData.length === 0 ? (\n              <div className=\"center\">\n                <Card>\n                  <h2>NO data found, Select different date range!</h2>\n                </Card>\n              </div>) :\n                  (<ReportBody display={display}>\n\n                <StackedBarChart graphData={graphData} />\n\n                <h3> Graph Name & description  </h3>\n              </ReportBody>\n                )}\n          </Grid>\n        </div>\n        <Grid item md={2} style={{ marginLeft: \"4%\" }}>\n          <DataSelect dataSetSelector={dataSetSelector} sensorChangeHandler={sensorChangeHandler} />\n          <Button variant=\"outlined\" color=\"primary\" onClick={clickHandler}>\n            {!display ? \"View PDF\" : \"Back\"}\n          </Button>\n          <GeneratePDF display={display} />\n\n        </Grid>\n\n      </Grid>\n\n\n\n\n\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n\n","import { useState, useEffect } from 'react';\r\nimport { csv, min, max } from 'd3';\r\nimport { VPD_Calculator, normalize_data } from \"../util/utility\"\r\n\r\nimport csvData from '../Data/2021_week19_climate_data.csv';\r\n\r\n\r\n// Data URL\r\n//const csvURL =\r\n//'https://gist.githubusercontent.com/muhammadtalha242/f960d2b81ab04f7e5bac5d00cecb4b1a/raw/worldPop.csv';\r\n\r\n\r\n\r\nexport const useData = () => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n\r\n    const row = (d) => {\r\n      d.Date = new Date(d.Date);\r\n      d.Temperature_2 = +[d.Temperature_2]\r\n      d.Temperature_137522 = +[d.Temperature_137522]\r\n      d.Humitidy_137522 = +[d.Humitidy_137522]\r\n      d.Humitidy_2 = +[d.Humitidy_2]\r\n      d.CarbonDioxide_137522 = +[d.CarbonDioxide_137522]\r\n      d.CarbonDioxide_2 = +[d.CarbonDioxide_2]\r\n    \r\n      //Creating VPD columns in dataset by using existing columns\r\n      d.Vpd_2 = VPD_Calculator(d.Temperature_2, d.Humitidy_2)\r\n      d.Vpd_137522 = VPD_Calculator(d.Temperature_137522, d.Humitidy_137522)\r\n\r\n      //Average\r\n      d.avg_temp = (d.Temperature_137522 + d.Temperature_2) / 2\r\n      d.avg_co2 = (d.CarbonDioxide_137522 + d.CarbonDioxide_2) / 2\r\n      d.avg_humitidy = (d.Humitidy_137522 + d.Humitidy_2) / 2\r\n      d.avg_vpd = (d.Vpd_137522 + d.Vpd_2) / 2\r\n\r\n\r\n      return d;\r\n    };\r\n\r\n    csv(csvData, row).then((data) => {\r\n      const temp_min = min(data, (x) => x.avg_temp);\r\n      const temp_max = max(data, (x) => x.avg_temp);\r\n      const co2_min = min(data, (x) => x.avg_co2);\r\n      const co2_max = max(data, (x) => x.avg_co2);\r\n      const humitidy_min = min(data, (x) => x.avg_humitidy);\r\n      const humitidy_max = max(data, (x) => x.avg_humitidy);\r\n      const vpd_min = min(data, (x) => x.avg_vpd);\r\n      const vpd_max = max(data, (x) => x.avg_vpd);\r\n      \r\n      data.forEach((d) => {\r\n        d.temperature = normalize_data(d.avg_temp, temp_min, temp_max)\r\n        d.co2 = normalize_data(d.avg_co2, co2_min, co2_max)\r\n        d.humitidy = normalize_data(d.avg_humitidy, humitidy_min, humitidy_max)\r\n        d.vpd = normalize_data(d.avg_vpd, vpd_min,vpd_max)\r\n      })\r\n      setData(data);\r\n    })\r\n\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}